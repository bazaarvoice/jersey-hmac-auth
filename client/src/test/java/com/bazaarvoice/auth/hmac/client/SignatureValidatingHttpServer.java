package com.bazaarvoice.auth.hmac.client;

import com.bazaarvoice.auth.hmac.common.Credentials;
import com.bazaarvoice.auth.hmac.common.SignatureGenerator;

/**
 * This class provides an in-memory HTTP server that validates the request signature
 * generated by the HMAC client filter (in {@link RequestEncoder}).
 */
public class SignatureValidatingHttpServer extends ValidatingHttpServer {
    private final String secretKey;

    protected SignatureValidatingHttpServer(int port, String secretKey) {
        super(port);
        this.secretKey = secretKey;
    }

    @Override
    protected void validate(Credentials credentials) throws Exception {
        String clientSignature = credentials.getSignature();
        String serverSignature = generateSignature(credentials);
        if (!clientSignature.equals(serverSignature)) {
            throw new Exception("Invalid signature");
        }
    }

    private String generateSignature(Credentials credentials) {
        return new SignatureGenerator().generate(
                secretKey,
                credentials.getMethod(),
                credentials.getTimestamp(),
                credentials.getPath(),
                credentials.getContent());
    }
}